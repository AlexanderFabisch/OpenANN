#! /usr/bin/env ruby

setup = {
  :env_dir => "octopus-code-distribution/environment/",
  :settings_dir => "./",
  :cmd_mod => " > /dev/null 2> /dev/null < /dev/null",
  :episodes => 1000,
  :gui => false,
  :hidden_units => 10
}
param_configs = [5, 10, 20, 40, 80, 107]
runs = 10

def start_server setup, port
  cmd = "java -Djava.endorsed.dirs=#{setup[:env_dir]}lib -jar #{setup[:env_dir]}octopus-environment.jar #{setup[:gui] ? "external_gui" : "external"} #{setup[:settings_dir]}settings.xml #{port.to_s}"
  system cmd + setup[:cmd_mod] + " &"
end

def start_client setup, port, parameters, hidden_units
  cmd = "./OctopusArmBenchmark localhost #{port.to_s} #{setup[:episodes].to_s} #{parameters.to_s} #{hidden_units.to_s}"
  system cmd + setup[:cmd_mod]
end

threads = []
param_configs.each do |params|
  port = 10000 + params
  threads << Thread.new(params) do |params|
    start_server setup, port
    runs.times do |run|
      sleep 2
      puts "Starting run \##{(run+1).to_s} with #{params.to_s} parameters."
      start_client setup, port, params, setup[:hidden_units]
      puts "Finished run \##{(run+1).to_s} with #{params.to_s} parameters."
    end
  end
end
threads.each do |t| t.join end

system "mkdir -p logs"
system "mv Neuroevolution*.log logs"
system "mv *-best.log logs"
system "pkill java"
